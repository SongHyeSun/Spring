package com.oracle.oBootJpa02.repository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.oracle.oBootJpa02.domain.Member;
import com.oracle.oBootJpa02.domain.Team;

import jakarta.persistence.EntityManager;

@Repository
public class JpaMemberRepository implements MemberRepository {
	
	private final EntityManager em;
	
	@Autowired
	public JpaMemberRepository(EntityManager em) {
		this.em = em;
	}

	@Override
	public Member memberSave(Member member) {
		// 1. 팀 저장
		Team team = new Team();
		team.setName(member.getTeamname());
		em.persist(team);

		//2. 회원 저장
		member.setTeam(team);
		em.persist(member);
		return member;
	}

	@Override
	public List<Member> findAll() {
										//jpql의 문법		//Member는 객체를 찾아가는 것! -> TBL 명을 넣으면 안된다.
		List<Member> memberList = em.createQuery("SELECT m from Member m", Member.class)
									.getResultList();
									//각각으로 분해되어있는 데이터를 List로 만들어주는 것!!
		return memberList;
	}

	@Override
	public Member findByMember(Long memberId) {
		Member member = em.find(Member.class, memberId);
		return member;
	}

	@Override
	public void updateByMember(Member member) {
		int result = 0;
		System.out.println("JpaMemberRepository updateByMember member->"+member);
		
		
	}

}
