package com.oracle.oBootDbConnect.repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javax.sql.DataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.datasource.DataSourceUtils;
import org.springframework.stereotype.Repository;
import com.oracle.oBootDbConnect.domain.Member7;

@Repository
public class JdbcMemberRepository implements MemberRepository {
	//JDBC 사용
	private final DataSource dataSource;
	
	@Autowired
	public JdbcMemberRepository(DataSource dataSource) {
		this.dataSource = dataSource;
	}
	
	private Connection getConnection() {
		//DataSourceUtil에 의해서 (dataSource -> application.properties에서 가져온 dataSource)
		//DataSourceUtils는 spring framework에서 제공해주는!@
		return DataSourceUtils.getConnection(dataSource);
	}
	
	@Override
	public Member7 save(Member7 member7) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Member7> findAll() {
		// TODO Auto-generated method stub
		return null;
	}
	
	//해제시키는 방법
	private void close(Connection conn, PreparedStatement pstmt, ResultSet rs) {
		try {
			if (rs != null) rs.close();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
		try {
			if (pstmt != null) pstmt.close();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
		try {
			if (conn != null) close(conn);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
}
